knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(corrplot)
library(mapview)
library(tigris)
library(sf)
library(ggplot2)
library(lubridate)
library(ezids)
library(gridExtra)
library(grid)
library(lattice)
library(caret)
df_spotify <- data.frame(read.csv('spotify_dataset.csv'))
str(df_spotify)
head(df_spotify)
tail(df_spotify)
summary(df_spotify)
(colMeans(is.na(df_spotify)))*100
data_corr<-df_spotify %>% select_if(is.numeric)
data_corr = subset(data_corr, select = -c(X) )
corrplot.mixed(cor(data_corr))
popHist <- ggplot(df_spotify, aes(x=popularity)) + geom_histogram(color="black", fill="steelblue1", alpha=0.9, bins = 101)+
ggtitle("Histogram of Popularity")
popHist
danceHist <- ggplot(df_spotify, aes(x=danceability)) + geom_histogram(color="black", fill="steelblue1", alpha=0.9, bins = 150)+
ggtitle("Histogram of Danceability")
danceHist
acHist <- ggplot(df_spotify, aes(x=acousticness)) + geom_histogram(color="black", fill="steelblue1", alpha=0.9, bins = 100)+
ggtitle("Histogram of Acousticness")
acHist
data_corr <- data_corr %>% mutate(popularity_t = if_else(popularity > 50, 1, 0))
data_corr
data_corr <- data_corr %>% mutate(popularity_t = if_else(popularity > 50, 1, 0))
data_corr
library("leaps")
reg2.best <- regsubsets(popularity~. , data = data_corr, nvmax = 12, nbest = 3, method = "exhaustive")
plot(reg2.best, scale = "adjr2", main = "Adjusted R^2")
plot(reg2.best, scale = "r2", main = "R^2")
plot(reg2.best, scale = "bic", main = "BIC")
plot(reg2.best, scale = "Cp", main = "Cp")
set.seed(123)
dat.d <- sample(1:nrow(data_corr),size=nrow(data_corr)*0.8,replace = FALSE) #random selection of 70% data.
data_corr.a = subset(data_corr, select = c(popularity_t,acousticness,danceability,duration_ms,energy,instrumentalness,key
,liveness,mode,speechiness,tempo,time_signature,valence) )
train <- data_corr.a[dat.d,] # 80% training data
test <- data_corr.a[-dat.d,] # remaining 20% test data
View(acHist)
pop1 <- subset(data_corr, popularity_t == 1)
pop2 <- subset(data_corr, popularity_t == 0)
str(pop1)
str(pop2)
ttest_dance <- t.test(pop1$danceability, pop2$danceability)
ttest_dance
ttest_energy <- t.test(pop1$energy, pop2$energy)
ttest_energy
ttest_loudness <- t.test(pop1$loudness, pop2$loudness)
ttest_loudness
ttest_speechiness <- t.test(pop1$speechiness, pop2$speechiness)
ttest_speechiness
ttest_acousticness <- t.test(pop1$acousticness, pop2$acousticness)
ttest_acousticness
ttest_instrumentalness <- t.test(pop1$instrumentalness, pop2$instrumentalness)
ttest_instrumentalness
ttest_liveness <- t.test(pop1$liveness, pop2$liveness)
ttest_liveness
ttest_valence <- t.test(pop1$valence, pop2$valence)
ttest_valence
ttest_tempo <- t.test(pop1$tempo, pop2$tempo)
ttest_tempo
ttest_duration_min <- t.test(pop1$duration_min, pop2$duration_min)
pop1 <- subset(data_corr, popularity_t == 1)
pop2 <- subset(data_corr, popularity_t == 0)
str(pop1)
str(pop2)
ttest_dance <- t.test(pop1$danceability, pop2$danceability)
ttest_dance
ttest_energy <- t.test(pop1$energy, pop2$energy)
ttest_energy
ttest_loudness <- t.test(pop1$loudness, pop2$loudness)
ttest_loudness
ttest_speechiness <- t.test(pop1$speechiness, pop2$speechiness)
ttest_speechiness
ttest_acousticness <- t.test(pop1$acousticness, pop2$acousticness)
ttest_acousticness
ttest_instrumentalness <- t.test(pop1$instrumentalness, pop2$instrumentalness)
ttest_instrumentalness
ttest_liveness <- t.test(pop1$liveness, pop2$liveness)
ttest_liveness
ttest_valence <- t.test(pop1$valence, pop2$valence)
ttest_valence
ttest_tempo <- t.test(pop1$tempo, pop2$tempo)
ttest_tempo
#ttest_duration_min <- t.test(pop1$duration_min, pop2$duration_min)
#ttest_duration_min
chi_key <- chisq.test(table(data_corr$popularity_t, data_corr$key))
chi_key
chi_mode <- chisq.test(table(data_corr$popularity_t, data_corr$mode))
chi_mode
chi_time_signature <- chisq.test(table(data_corr$popularity_t, data_corr$time_signature))
chi_time_signature
unique(pop1$key)
unique(pop1$mode)
unique(pop1$time_signature)
mode1 <- subset(data_corr, mode == 1)
mode0 <- subset(data_corr, mode == 0)
str(mode1)
str(mode0)
ttest_mode <- t.test(mode1$popularity, mode0$popularity)
ttest_mode
aovtime_signature <- aov(popularity ~ time_signature, data = data_corr)
summary(aovtime_signature)
str(data_corr)
model_lm <- lm(popularity~danceability+mode+speechiness+instrumentalness+valence+tempo+time_signature,data=train)
str(train)
str(data_corr)
set.seed(123)
dat.d <- sample(1:nrow(data_corr),size=nrow(data_corr)*0.8,replace = FALSE) #random selection of 70% data.
train <- data_corr[dat.d,] # 80% training data
test <- data_corr[-dat.d,]
str(data_corr)
set.seed(123)
dat.d <- sample(1:nrow(data_corr),size=nrow(data_corr)*0.8,replace = FALSE) #random selection of 70% data.
train1 <- data_corr[dat.d,] # 80% training data
test1 <- data_corr[-dat.d,]
model_lm <- lm(popularity~danceability+mode+speechiness+instrumentalness+valence+tempo+time_signature,data=train1)
summary(model_lm)
model_lm2 <- lm(popularity~duration_ms+danceability+energy+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo,data=train1)
summary(model_lm2)
model_lm <- lm(popularity~danceability+mode+speechiness+instrumentalness+valence+tempo+time_signature,data=train1)
summary(model_lm)
model_lm2 <- lm(popularity~duration_ms+danceability+energy+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo,data=train1)
summary(model_lm2)
model_lmf <- lm(popularity~.,data=train1)
summary(model_lmf)
model_lm <- lm(popularity~danceability+mode+speechiness+instrumentalness+valence+tempo+time_signature,data=train1)
summary(model_lm)
model_lm2 <- lm(popularity~duration_ms+danceability+energy+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo,data=data_corr)
summary(model_lm2)
model_lmf <- lm(popularity~.,data=train1)
summary(model_lmf)
model_lm <- lm(popularity~danceability+mode+speechiness+instrumentalness+valence+tempo+time_signature,data=train1)
summary(model_lm)
model_lm2 <- lm(popularity~duration_ms+danceability+energy+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo,data=train1)
summary(model_lm2)
model_lmf <- lm(popularity~.,data=train1)
summary(model_lmf)
View(train1)
library("leaps")
reg2.best <- regsubsets(popularity~. , data = df_spotify, nvmax = 12, nbest = 3, method = "exhaustive")
df_spotify <- data.frame(read.csv('spotify_dataset.csv'))
str(df_spotify)
library("leaps")
reg2.best <- regsubsets(popularity~. , data = df_spotify, nvmax = 12, nbest = 3, method = "exhaustive")
data_corr<-df_spotify %>% select_if(is.numeric)
data_corr = subset(data_corr, select = -c(X) )
corrplot.mixed(cor(data_corr))
options(dplyr.summarise.inform = FALSE)
missing.values <- df_spotify %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
missing.values
df_spotify$artists[df_spotify$artists == '['] <- ''
df_spotify$artists[df_spotify$artists == ']']<- ''
df_spotify$artists[df_spotify$artists == "'"]<- ''
head(df_spotify)
data_corr = subset(df_spotify, select = -c(track_id,X) )
data_corr<-data_corr[!duplicated(data_corr),]
data_corr = subset(data_corr, select = -c(duration_ms) )
library("leaps")
reg2.best <- regsubsets(popularity~. , data = data_corr, nvmax = 12, nbest = 3, method = "exhaustive")
str(pop1)
str(pop2)
pop1 <- subset(data_corr, popularity_t == 1)
data_corr<-df_spotify %>% select_if(is.numeric)
data_corr = subset(data_corr, select = -c(X) )
data_corr
corrplot(cor(data_corr),
type = "upper",
col = colorRampPalette(c("white", "maroon1", "steelblue1"))(100),
is.corr = TRUE,
tl.col = "black",
order = "hclust",
diag = TRUE)
data_corr <- data_corr %>% mutate(popularity_t = if_else(popularity > 50, 1, 0))
data_corr
pop1 <- subset(data_corr, popularity_t == 1)
pop2 <- subset(data_corr, popularity_t == 0)
str(pop1)
str(pop2)
ttest_dance <- t.test(pop1$danceability, pop2$danceability)
ttest_dance
ttest_energy <- t.test(pop1$energy, pop2$energy)
ttest_energy
ttest_loudness <- t.test(pop1$loudness, pop2$loudness)
ttest_loudness
ttest_speechiness <- t.test(pop1$speechiness, pop2$speechiness)
ttest_speechiness
ttest_acousticness <- t.test(pop1$acousticness, pop2$acousticness)
ttest_acousticness
ttest_instrumentalness <- t.test(pop1$instrumentalness, pop2$instrumentalness)
ttest_instrumentalness
ttest_liveness <- t.test(pop1$liveness, pop2$liveness)
ttest_liveness
ttest_valence <- t.test(pop1$valence, pop2$valence)
ttest_valence
ttest_tempo <- t.test(pop1$tempo, pop2$tempo)
ttest_tempo
#ttest_duration_min <- t.test(pop1$duration_min, pop2$duration_min)
#ttest_duration_min
str(pop1)
pop1 <- subset(data_corr, popularity_t == 1)
pop2 <- subset(data_corr, popularity_t == 0)
str(pop1)
str(pop2)
ttest_dance <- t.test(pop1$danceability, pop2$danceability)
ttest_dance
ttest_energy <- t.test(pop1$energy, pop2$energy)
ttest_energy
ttest_loudness <- t.test(pop1$loudness, pop2$loudness)
ttest_loudness
ttest_speechiness <- t.test(pop1$speechiness, pop2$speechiness)
ttest_speechiness
ttest_acousticness <- t.test(pop1$acousticness, pop2$acousticness)
ttest_acousticness
ttest_instrumentalness <- t.test(pop1$instrumentalness, pop2$instrumentalness)
ttest_instrumentalness
ttest_liveness <- t.test(pop1$liveness, pop2$liveness)
ttest_liveness
ttest_valence <- t.test(pop1$valence, pop2$valence)
ttest_valence
ttest_tempo <- t.test(pop1$tempo, pop2$tempo)
ttest_tempo
ttest_duration_ms <- t.test(pop1$duration_ms, pop2$duration_ms)
ttest_duration_ms
knitr::opts_chunk$set(echo = TRUE)
unique(data_corr$popularity_t)
poptfactor <- data_corr
poptfactor$popularity_t <- as.factor(data_corr$popularity_t)
boxt <- ggplot(poptfactor, aes(x=popularity_t, y=tempo,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for tempo")
boxdu <-ggplot(poptfactor, aes(x=popularity_t, y=duration_min,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for duration_min")
boxv <-ggplot(poptfactor, aes(x=popularity_t, y=valence,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for valence")
boxi <-ggplot(poptfactor, aes(x=popularity_t, y=instrumentalness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for instrumentalness")
boxa <-ggplot(poptfactor, aes(x=popularity_t, y=acousticness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for acousticness")
boxda <-ggplot(poptfactor, aes(x=popularity_t, y=danceability,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for danceability")
boxe <-ggplot(poptfactor, aes(x=popularity_t, y=energy,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for energy")
boxlo <-ggplot(poptfactor, aes(x=popularity_t, y=loudness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for loudness")
boxs <-ggplot(poptfactor, aes(x=popularity_t, y=speechiness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for speechiness")
boxli <-ggplot(poptfactor, aes(x=popularity_t, y=liveness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for liveness")
boxforvar <- ggarrange(boxt, boxdu, boxv,boxi,boxa,boxda,boxe,boxlo,boxs, boxli, ncol = 3, nrow = 4)
library(ggpubr)
boxforvar <- ggarrange(boxt, boxdu, boxv,boxi,boxa,boxda,boxe,boxlo,boxs, boxli, ncol = 3, nrow = 4)
str(pop1)
ttest_duration_min <- t.test(pop1$duration_min, pop2$duration_min)
ttest_duration_ms <- t.test(pop1$duration_ms, pop2$duration_ms)
ttest_duration_ms
boxforvar <- ggarrange(boxt, boxdu, boxv,boxi,boxa,boxda,boxe,boxlo,boxs, boxli, ncol = 3, nrow = 4)
unique(data_corr$popularity_t)
poptfactor <- data_corr
poptfactor$popularity_t <- as.factor(data_corr$popularity_t)
boxt <- ggplot(poptfactor, aes(x=popularity_t, y=tempo,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for tempo")
boxdu <-ggplot(poptfactor, aes(x=popularity_t, y=duration_ms,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for duration_ms")
boxv <-ggplot(poptfactor, aes(x=popularity_t, y=valence,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for valence")
boxi <-ggplot(poptfactor, aes(x=popularity_t, y=instrumentalness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for instrumentalness")
boxa <-ggplot(poptfactor, aes(x=popularity_t, y=acousticness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for acousticness")
boxda <-ggplot(poptfactor, aes(x=popularity_t, y=danceability,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for danceability")
boxe <-ggplot(poptfactor, aes(x=popularity_t, y=energy,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for energy")
boxlo <-ggplot(poptfactor, aes(x=popularity_t, y=loudness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for loudness")
boxs <-ggplot(poptfactor, aes(x=popularity_t, y=speechiness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for speechiness")
boxli <-ggplot(poptfactor, aes(x=popularity_t, y=liveness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for liveness")
boxforvar <- ggarrange(boxt, boxdu, boxv,boxi,boxa,boxda,boxe,boxlo,boxs, boxli, ncol = 3, nrow = 4)
boxforvar
unique(data_corr$popularity_t)
poptfactor <- data_corr
poptfactor$popularity_t <- as.factor(data_corr$popularity_t)
boxt <- ggplot(poptfactor, aes(x=popularity_t, y=tempo,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for tempo")
boxdu <-ggplot(poptfactor, aes(x=popularity_t, y=duration_ms,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for duration_ms")
boxv <-ggplot(poptfactor, aes(x=popularity_t, y=valence,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for valence")
boxi <-ggplot(poptfactor, aes(x=popularity_t, y=instrumentalness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for instrumentalness")
boxa <-ggplot(poptfactor, aes(x=popularity_t, y=acousticness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for acousticness")
boxda <-ggplot(poptfactor, aes(x=popularity_t, y=danceability,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for danceability")
boxe <-ggplot(poptfactor, aes(x=popularity_t, y=energy,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for energy")
boxlo <-ggplot(poptfactor, aes(x=popularity_t, y=loudness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for loudness")
boxs <-ggplot(poptfactor, aes(x=popularity_t, y=speechiness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for speechiness")
boxli <-ggplot(poptfactor, aes(x=popularity_t, y=liveness,fill=popularity_t)) +
geom_boxplot() +
ggtitle("boxplot for liveness")
